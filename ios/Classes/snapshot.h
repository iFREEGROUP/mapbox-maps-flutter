// Autogenerated from Pigeon (v16.0.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>
#import "MapInterfaces.h"

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class FLTMapSnapshotOptions;
@class FLTSnapshotOverlayOptions;

@interface FLTMapSnapshotOptions : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithSize:(FLTSize *)size
    pixelRatio:(double )pixelRatio;
@property(nonatomic, strong) FLTSize * size;
@property(nonatomic, assign) double  pixelRatio;
@end

@interface FLTSnapshotOverlayOptions : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithShowLogo:(BOOL )showLogo
    showAttributes:(BOOL )showAttributes;
@property(nonatomic, assign) BOOL  showLogo;
@property(nonatomic, assign) BOOL  showAttributes;
@end

/// The codec used by FLT_SnapshotterMessager.
NSObject<FlutterMessageCodec> *FLT_SnapshotterMessagerGetCodec(void);

@protocol FLT_SnapshotterMessager
- (void)cancelId:(NSString *)id error:(FlutterError *_Nullable *_Nonnull)error;
- (void)destroyId:(NSString *)id error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setCameraId:(NSString *)id cameraOptions:(FLTCameraOptions *)cameraOptions error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setStyleUriId:(NSString *)id styleUri:(NSString *)styleUri error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setStyleJsonId:(NSString *)id styleJson:(NSString *)styleJson error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setSizeId:(NSString *)id size:(FLTSize *)size error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable FLTCameraOptions *)cameraForCoordinatesId:(NSString *)id coordinates:(NSArray<NSDictionary<NSString *, id> *> *)coordinates padding:(FLTMbxEdgeInsets *)padding bearing:(nullable NSNumber *)bearing pitch:(nullable NSNumber *)pitch error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable FLTCoordinateBounds *)coordinateBoundsForCameraId:(NSString *)id camera:(FLTCameraOptions *)camera error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable FLTCameraState *)getCameraStateId:(NSString *)id error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable FLTSize *)getSizeId:(NSString *)id error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSString *)getStyleJsonId:(NSString *)id error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSString *)getStyleUriId:(NSString *)id error:(FlutterError *_Nullable *_Nonnull)error;
- (void)startId:(NSString *)id completion:(void (^)(FLTMbxImage *_Nullable, FlutterError *_Nullable))completion;
@end

extern void SetUpFLT_SnapshotterMessager(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLT_SnapshotterMessager> *_Nullable api);

/// The codec used by FLTOnSnapshotStyleListener.
NSObject<FlutterMessageCodec> *FLTOnSnapshotStyleListenerGetCodec(void);

@interface FLTOnSnapshotStyleListener : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)onDidFinishLoadingStyleWithCompletion:(void (^)(FlutterError *_Nullable))completion;
- (void)onDidFullyLoadStyleWithCompletion:(void (^)(FlutterError *_Nullable))completion;
- (void)onDidFailLoadingStyleMessage:(NSString *)message completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onStyleImageMissingImageId:(NSString *)imageId completion:(void (^)(FlutterError *_Nullable))completion;
@end

/// The codec used by FLT_SnapShotManager.
NSObject<FlutterMessageCodec> *FLT_SnapShotManagerGetCodec(void);

@protocol FLT_SnapShotManager
/// @return `nil` only when `error != nil`.
- (nullable NSString *)createOptions:(FLTMapSnapshotOptions *)options overlayOptions:(FLTSnapshotOverlayOptions *)overlayOptions error:(FlutterError *_Nullable *_Nonnull)error;
- (void)snapshotWithCompletion:(void (^)(FLTMbxImage *_Nullable, FlutterError *_Nullable))completion;
@end

extern void SetUpFLT_SnapShotManager(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLT_SnapShotManager> *_Nullable api);

NS_ASSUME_NONNULL_END
