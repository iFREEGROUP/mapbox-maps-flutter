// Autogenerated from Pigeon (v17.0.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class FLTSize;
@class FLTMapSnapshotOptions;
@class FLTSnapshotOverlayOptions;
@class FLTMbxImage;

@interface FLTSize : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithWidth:(double )width
    height:(double )height;
/// Width of the size.
@property(nonatomic, assign) double  width;
/// Height of the size.
@property(nonatomic, assign) double  height;
@end

@interface FLTMapSnapshotOptions : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithSize:(FLTSize *)size
    pixelRatio:(double )pixelRatio;
@property(nonatomic, strong) FLTSize * size;
@property(nonatomic, assign) double  pixelRatio;
@end

@interface FLTSnapshotOverlayOptions : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithShowLogo:(BOOL )showLogo
    showAttributes:(BOOL )showAttributes;
@property(nonatomic, assign) BOOL  showLogo;
@property(nonatomic, assign) BOOL  showAttributes;
@end

@interface FLTMbxImage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithWidth:(NSInteger )width
    height:(NSInteger )height
    data:(FlutterStandardTypedData *)data;
/// The width of the image, in screen pixels.
@property(nonatomic, assign) NSInteger  width;
/// The height of the image, in screen pixels.
@property(nonatomic, assign) NSInteger  height;
/// 32-bit premultiplied RGBA image data.
///
/// An uncompressed image data encoded in 32-bit RGBA format with premultiplied
/// alpha channel. This field should contain exactly `4 * width * height` bytes. It
/// should consist of a sequence of scanlines.
@property(nonatomic, strong) FlutterStandardTypedData * data;
@end

/// The codec used by FLT_SnapShotManager.
NSObject<FlutterMessageCodec> *FLT_SnapShotManagerGetCodec(void);

@protocol FLT_SnapShotManager
/// @return `nil` only when `error != nil`.
- (nullable NSString *)createOptions:(FLTMapSnapshotOptions *)options overlayOptions:(FLTSnapshotOverlayOptions *)overlayOptions error:(FlutterError *_Nullable *_Nonnull)error;
- (void)snapshotWithCompletion:(void (^)(FLTMbxImage *_Nullable, FlutterError *_Nullable))completion;
@end

extern void SetUpFLT_SnapShotManager(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLT_SnapShotManager> *_Nullable api);

NS_ASSUME_NONNULL_END
